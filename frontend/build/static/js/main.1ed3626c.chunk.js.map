{"version":3,"sources":["App/assets/space.svg","App/assets/P.svg","App/assets/right.svg","App/assets/logo.svg","App/Header.js","App/api/localstorage.js","App/Intro.js","App/components/Recorder.js","App/components/PhraseBox.js","App/components/Metrics.js","App/components/Wave.js","App/api/index.js","App/Record.js","App/Tutorial.js","App/App.js","index.js"],"names":["module","exports","Header","className","to","src","logo","height","alt","Component","storage","window","localStorage","getName","getItem","createUUID","setItem","s4","Math","floor","random","toString","substring","guid","getUUID","Intro","props","renderInput","type","id","placeholder","onChange","handleInput","renderWelcomeBackMsg","state","name","e","setState","target","value","handleTrainMimicBtn","undefined","alert","history","push","this","style","color","onClick","Recorder","mediaRecorder","start","stop","pause","resume","navigator","getUserMedia","mozGetUserMedia","msGetUserMedia","webkitGetUserMedia","MediaRecorder","chunks","blobOpts","onStop","onError","mediaOpts","onPause","onResume","onStart","gotStream","onErr","err","console","warn","audio","stream","ondataavailable","data","onstop","blob","Blob","onerror","onpause","onresume","onstart","onMissingAPIs","prevProps","command","onUnmount","React","PhraseBox","renderFeedback","promptNum","audioLen","speechRate","prompt","length","avgSpeechRate","totalCharLen","totalTime","toFixed","determinePace","Metrics","secondsToHms","d","Number","h","m","s","charPerSec","isNaN","totalPrompt","round","Wave","handleKeyDown","event","keyCode","wavesurfer","loadWaveForm","loadBlob","document","addEventListener","waveColor","WaveSurfer","create","container","on","onFinish","play","log","cssClass","apiRoot","Record","dismissPopup","showPopup","requestPrompts","uuid","fetch","method","getPrompt","then","res","json","success","total_prompt","requestUserDetails","getUser","userName","user_name","language","prompt_num","total_time_spoken","len_char_spoken","body","JSON","stringify","headers","createUser","userCreated","renderWave","stopWav","renderVisualizer","record","shouldRecord","backgroundColor","strokeColor","processBlob","displayWav","audio_len","shoulddisplayWav","bool","playWav","preventDefault","reset","recordHandler","onNext","setTimeout","catch","silenceDetection","hark","interval","threshold","removeEventListener","route","show","dismiss","TopContainer","renderContainer","spacebarSVG","PSVG","rightSVG","handleClick","Tutorial","App","onUpdate","scrollTo","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1ed3626c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space.aac7a8f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/P.38bc67ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/right.35ec7893.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.c1867f96.svg\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport logo from \"./assets/logo.svg\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"topnav\">\r\n        <Link to=\"/\">\r\n          <img className=\"logo\" src={logo} height=\"24px\" alt=\"\"/>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","let storage = window.localStorage\r\n\r\nfunction guid() {\r\n    function s4() {\r\n        return Math.floor((1 + Math.random()) * 0x10000)\r\n            .toString(16)\r\n            .substring(1);\r\n    }\r\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' +\r\n        s4() + '-' + s4() + s4() + s4();\r\n}\r\n\r\nexport const saveName = (name) => {\r\n    storage.setItem('name', name)\r\n}\r\n\r\nexport const getName = () => {\r\n    return storage.getItem('name')\r\n}\r\n\r\nexport const createUUID = () => {\r\n    storage.setItem('uuid', guid())\r\n}\r\n\r\nexport const getUUID = () => {\r\n    return storage.getItem('uuid')\r\n}","import React, { Component } from \"react\";\r\n// import { history } from \"react-router-dom\";\r\nimport { getName, saveName } from \"./api/localstorage\";\r\n\r\nclass Intro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: undefined\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const name = getName();\r\n    if (name) {\r\n      this.setState({ name });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"page-intro\">\r\n        <div id=\"PageIntro\">\r\n          <h2 style={{ color: \"#FD9E66\" }}>Mimic Recording Studio</h2>\r\n          <h1>Help us build the voice(s) of Mycroft!</h1>\r\n          <p>\r\n            Mycroft's open source Mimic technologies are Text-to-Speech engines,\r\n            which take a piece of written text and convert it into spoken audio.\r\n            The latest generation of this technology uses machine learning\r\n            techniques to create a model, which can speak a specific language,\r\n            sounding like the voice on which it was trained.\r\n          </p>\r\n          <p>\r\n            The Mimic Recording Studio simplifies the collection of training data from\r\n            individuals, each of which can be used to produce a distinct voice\r\n            for Mimic.\r\n          </p>\r\n\r\n          <div className=\"instructions\">\r\n            <i className=\"fas fa-book-open\" />\r\n            <h2>guide</h2>\r\n            <p>\r\n              Mimic II preserves the rhythm, tone and pronunciation from source\r\n              recordings. As a result, it is important for all recordings to use\r\n              a consistent voice for the personality of the final product.\r\n            </p>\r\n\r\n            <p>\r\n              To help with this, adopt the assistant persona for all recordings:\r\n            </p>\r\n\r\n            <ul className=\"persona-desc\">\r\n              <li>\r\n                <span className=\"li-title\">\r\n                  The assistant is knowledgeable and confident, yet humble.\r\n                </span>\r\n                <br /> The assistant has access to all the world's information,\r\n                but is aware of his or her own limitations, and doesn't mind\r\n                being corrected.\r\n              </li>\r\n              <li>\r\n                <span className=\"li-title\">\r\n                  The assistant loves knowledge and enjoys sharing information\r\n                  with others.\r\n                </span>\r\n                <br /> This enjoyment can be clearly heard in the energy and\r\n                enthusiasm in his or her voice.\r\n              </li>\r\n              <li>\r\n                <span className=\"li-title\">\r\n                  The assistant is persistent, optimistic and upbeat.\r\n                </span>\r\n                <br /> Even if there are errors or misunderstandings, the tone\r\n                should be positive, without any sign of frustration.\r\n              </li>\r\n              <li>\r\n                <span className=\"li-title\">\r\n                  The assistant is professional without being stiff or overly\r\n                  formal.\r\n                </span>\r\n                <br /> The assistant speaks with an efficient, yet unrushed\r\n                pace, similar to what you might hear from a news anchor.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          {getName() ? this.renderWelcomeBackMsg() : this.renderInput()}\r\n          <div className=\"btn_PageIntro\">\r\n            <button\r\n              id=\"btn_PageIntro\"\r\n              className=\"btn\"\r\n              onClick={this.handleTrainMimicBtn}\r\n            >\r\n            Record\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInput = () => {\r\n    return (\r\n      <div>\r\n        <p>To get started, enter your name and hit the Record button.</p>\r\n        <input\r\n          type=\"text\"\r\n          id=\"yourname\"\r\n          placeholder=\"Your Name\"\r\n          onChange={this.handleInput}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderWelcomeBackMsg = () => {\r\n    return (\r\n      <div>\r\n        <p>Welcome back {this.state.name}!</p>\r\n        <p>Hit Train Mimic to continue recording</p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({ name: e.target.value });\r\n  };\r\n\r\n  handleTrainMimicBtn = () => {\r\n    if (this.state.name === undefined) {\r\n      alert(\"Please input a name before proceeding!\");\r\n    } else {\r\n\t  saveName(this.state.name);\r\n\t  this.props.history.push('/record')\r\n    }\r\n  };\r\n}\r\n\r\nexport default Intro;\r\n","/* \r\nThis code was modified to work with the lastest React Version.\r\nOriginal code can be found here \r\nhttps://github.com/agrasley/react-recorder/blob/master/src/Recorder.js\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2016 Alexander Grasley\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n\r\n*/\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Recorder extends React.Component {\r\n\r\n\tstart () {\r\n\t\tthis.mediaRecorder.start()\r\n\t}\r\n\r\n\tstop () {\r\n\t\tthis.mediaRecorder.stop()\r\n\t}\r\n\r\n\tpause () {\r\n\t\tthis.mediaRecorder.pause()\r\n\t}\r\n\r\n\tresume () {\r\n\t\tthis.mediaRecorder.resume()\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tnavigator.getUserMedia = (navigator.getUserMedia ||\r\n\t\t\tnavigator.mozGetUserMedia ||\r\n\t\t\tnavigator.msGetUserMedia ||\r\n\t\t\tnavigator.webkitGetUserMedia);\r\n\r\n\t\tif (navigator.getUserMedia && window.MediaRecorder) {\r\n\t\t\tconst constraints = {audio: true};\r\n\t\t\tthis.chunks = [];\r\n\t\t\tconst { blobOpts, onStop, onError, mediaOpts, onPause, onResume, onStart, gotStream } = this.props;\r\n\r\n\t\t\tconst onErr = err => {\r\n\t\t\t\tconsole.warn(err);\r\n\t\t\t\tif (onError) onError(err)\r\n\t\t\t};\r\n\r\n\t\t\tconst onSuccess = stream => {\r\n                \r\n\t\t\t\tthis.mediaRecorder = new window.MediaRecorder(stream, mediaOpts || {});\r\n\r\n\t\t\t\tthis.mediaRecorder.ondataavailable = e => {\r\n\t\t\t\t\tthis.chunks.push(e.data)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.mediaRecorder.onstop = e => {\r\n\t\t\t\t\tconst blob = new window.Blob(this.chunks, blobOpts || {type: 'audio/wav'});\r\n\t\t\t\t\tthis.chunks = [];\r\n\t\t\t\t\tonStop(blob)\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis.mediaRecorder.onerror = onErr;\r\n\t\t\t\tif (onPause) this.mediaRecorder.onpause = onPause;\r\n\t\t\t\tif (onResume) this.mediaRecorder.onresume = onResume;\r\n\t\t\t\tif (onStart) this.mediaRecorder.onstart = onStart;\r\n\t\t\t\tthis.stream = stream;\r\n\t\t\t\tif (gotStream) gotStream(stream)\r\n\t\t\t};\r\n\r\n\t\t\tnavigator.getUserMedia(constraints, onSuccess, onErr)\r\n\t\t} else {\r\n\t\t\tconsole.warn('Audio recording APIs not supported by this browser');\r\n\t\t\tconst { onMissingAPIs } = this.props;\r\n\t\t\tif (onMissingAPIs) {\r\n\t\t\t\tonMissingAPIs(navigator.getUserMedia, window.MediaRecorder)\r\n\t\t\t} else {\r\n\t\t\t\twindow.alert('Your browser doesn\\'t support native microphone recording. For best results, we recommend using Google Chrome or Mozilla Firefox to use this site.')\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate (prevProps) {\r\n\t\tif (this.props.command && this.props.command !== 'none' && prevProps.command !== this.props.command) {\r\n\t\t\tthis[this.props.command]()\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t\tif (this.props.onUnmount) this.props.onUnmount(this.stream)\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nRecorder.propTypes = {\r\n\tcommand: PropTypes.oneOf(['start', 'stop', 'pause', 'resume', 'none']),\r\n\tonStop: PropTypes.func.isRequired,\r\n\tonMissingAPIs: PropTypes.func,\r\n\tonError: PropTypes.func,\r\n\tonPause: PropTypes.func,\r\n\tonStart: PropTypes.func,\r\n\tonResume: PropTypes.func,\r\n\tonUnmount: PropTypes.func,\r\n\tgotStream: PropTypes.func,\r\n\tblobOpts: PropTypes.object,\r\n\tmediaOpts: PropTypes.object\r\n};\r\n\r\nexport default Recorder\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass PhraseBox extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"phraseBox\">\r\n        <div id=\"phrase\">\r\n          {this.renderFeedback()}\r\n          {this.props.prompt}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderFeedback = () => {\r\n    if (this.props.promptNum < 20 || this.props.audioLen === 0) {\r\n      return \"\";\r\n    } else {\r\n      const speechRate = this.props.prompt.length / this.props.audioLen;\r\n      const avgSpeechRate = (\r\n        this.props.totalCharLen / this.props.totalTime\r\n      ).toFixed(1);\r\n      // allow deviation of 25% of speechRate from average speech rate\r\n      if (this.determinePace(avgSpeechRate, speechRate)) {\r\n        return <div className=\"feedback-ball-green\">Consistent Pace</div>;\r\n      } else if (speechRate < avgSpeechRate) {\r\n        return (\r\n          <div className=\"feedback-ball-red\">Slower than your average</div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div className=\"feedback-ball-red\">Faster than your average</div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  determinePace = (avgSpeechRate, speechRate) => {\r\n    if (this.props.prompt.length <= 25) {\r\n      return (\r\n        avgSpeechRate * 0.5 < speechRate && speechRate < avgSpeechRate * 1.5\r\n      );\r\n    } else if (this.props.prompt.length <= 125) {\r\n      return (\r\n        avgSpeechRate * 0.75 < speechRate && speechRate < avgSpeechRate * 1.25\r\n      );\r\n    } else {\r\n      return (\r\n        avgSpeechRate * 0.85 < speechRate && speechRate < avgSpeechRate * 1.15\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nPhraseBox.propTypes = {\r\n  prompt: PropTypes.string,\r\n  promptNum: PropTypes.number,\r\n  audioLen: PropTypes.number,\r\n  totalCharLen: PropTypes.number,\r\n  totalTime: PropTypes.number\r\n};\r\n\r\nexport default PhraseBox;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Metrics extends Component {\r\n    render() {\r\n        let charPerSec = (this.props.totalCharLen / this.props.totalTime).toFixed(1);\r\n        charPerSec = isNaN(charPerSec) ? 0 : charPerSec;\r\n        return (\r\n            <div className=\"metrics-container\">\r\n                <div className=\"total-hours\">\r\n                    <h2>PROGRESS</h2>\r\n                    <div>\r\n                        Phrase: {this.props.promptNum} / {this.props.totalPrompt}\r\n                    </div>\r\n                    <div>\r\n                        Time Recorded: {this.secondsToHms(Math.round(this.props.totalTime))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"speech-rate\">\r\n                    <h2>SPEECH RATE</h2>\r\n                    <div>Overall Average: {charPerSec} characters per second</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    secondsToHms = d => {\r\n        d = Number(d);\r\n        var h = Math.floor(d / 3600);\r\n        var m = Math.floor((d % 3600) / 60);\r\n        var s = Math.floor((d % 3600) % 60);\r\n\r\n        var hDisplay = h > 0 ? h + (h === 1 ? \" hour, \" : \" hours, \") : \"\";\r\n        var mDisplay = m > 0 ? m + (m === 1 ? \" minute, \" : \" minutes, \") : \"\";\r\n        var sDisplay = s > 0 ? s + (s === 1 ? \" second\" : \" seconds\") : \"\";\r\n        return hDisplay + mDisplay + sDisplay;\r\n    };\r\n}\r\n\r\nMetrics.propTypes = {\r\n    promptNum: PropTypes.number,\r\n    totalCharLen: PropTypes.number,\r\n    totalTime: PropTypes.number,\r\n    totalPrompt: PropTypes.number\r\n}\r\n\r\nexport default Metrics;\r\n","import React, { Component } from \"react\";\r\nimport WaveSurfer from \"wavesurfer.js\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Wave extends Component {\r\n    componentDidMount() {\r\n        document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n\r\n        const { waveColor, blob } = this.props;\r\n        this.wavesurfer = WaveSurfer.create({\r\n            container: \"#waveform\",\r\n            waveColor: waveColor ? waveColor : \"#FD9E66\"\r\n        });\r\n        this.loadWaveForm(blob);\r\n        this.wavesurfer.on(\"finish\", () => {\r\n            this.wavesurfer.pause();\r\n            this.props.onFinish();\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.play) {\r\n            console.log(\"play\")\r\n            this.wavesurfer.play();\r\n        } else {\r\n            console.log(\"pausing\")\r\n            this.wavesurfer.pause();\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (event) => {\r\n        if (event.keyCode === 27) {\r\n            this.wavesurfer.pause()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const cssClass = this.props.className ? this.props.className : \"\";\r\n        return (\r\n            <div\r\n                id=\"waveform\"\r\n                className={cssClass}\r\n            />\r\n        );\r\n    }\r\n\r\n    loadWaveForm = blob => {\r\n        this.wavesurfer.loadBlob(blob);\r\n    };\r\n}\r\n\r\nWave.propTypes = {\r\n    className: PropTypes.string,\r\n    waveColor: PropTypes.string,\r\n    blob: PropTypes.instanceOf(window.Blob),\r\n    play: PropTypes.bool,\r\n    onFinish: PropTypes.func\r\n}\r\n\r\nexport default Wave;\r\n","const apiRoot = \"http://localhost:5000/\";\r\n\r\nexport const postAudio = (audio, prompt, uuid) => {\r\n    return fetch(apiRoot + `api/audio/?uuid=${uuid}&prompt=${prompt}`, {\r\n        method: \"POST\",\r\n        body: audio,\r\n        headers: {\r\n            \"Content-Type\": \"audio/wav\"\r\n        }\r\n    })\r\n};\r\n\r\nexport const getPrompt = uuid => {\r\n    return fetch(apiRoot + `api/prompt/?uuid=${uuid}`, {\r\n        method: \"GET\"\r\n    });\r\n};\r\n\r\nexport const getUser = uuid => {\r\n    return fetch(apiRoot + `api/user/?uuid=${uuid}`, {\r\n        method: 'GET'\r\n    })\r\n}\r\n\r\nexport const getAudioLen = (uuid, audio) => {\r\n    return fetch(apiRoot + `api/audio/?uuid=${uuid}&get_len=True`, {\r\n        method: \"POST\",\r\n        body: audio,\r\n        headers: {\r\n            \"Content-Type\": \"audio/wav\"\r\n        }\r\n    })\r\n}\r\n\r\nexport const createUser = (uuid, name) => {\r\n    const data = {\r\n        uuid: uuid,\r\n        user_name: name\r\n    }\r\n    return fetch(apiRoot + `api/user/`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}","import React, { Component } from \"react\";\r\nimport { ReactMic as Visualizer } from \"react-mic\";\r\nimport Recorder from \"./components/Recorder\";\r\nimport PhraseBox from \"./components/PhraseBox\";\r\nimport Metrics from \"./components/Metrics\";\r\nimport hark from \"hark\";\r\nimport Wave from \"./components/Wave\";\r\n\r\n// import microphoneSVG from './assets/microphone.svg'\r\nimport spacebarSVG from \"./assets/space.svg\";\r\nimport PSVG from \"./assets/P.svg\";\r\nimport rightSVG from \"./assets/right.svg\";\r\n\r\nimport { postAudio, getPrompt, getUser, createUser, getAudioLen } from \"./api\";\r\nimport { getUUID, getName } from \"./api/localstorage\";\r\n\r\nclass Record extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      userCreated: false,\r\n      shouldRecord: false,\r\n      displayWav: false,\r\n      blob: undefined,\r\n      play: false,\r\n      prompt: \"*error loading prompt... is the backend running?*\",\r\n      language: \"\",\r\n      promptNum: 0,\r\n      totalTime: 0,\r\n      totalCharLen: 0,\r\n      audioLen: 0,\r\n      showPopup: false\r\n    };\r\n\r\n    this.uuid = getUUID();\r\n    this.name = getName();\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.handleKeyDown, false);\r\n    this.requestUserDetails(this.uuid);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyDown, false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"PageRecord\">\r\n        <h1>Mimic Recording Studio</h1>\r\n        <TopContainer\r\n          userName={this.name}\r\n          route={this.props.history.push}\r\n          show={this.state.showPopup}\r\n          dismiss={this.dismissPopup}\r\n        />\r\n        <Metrics\r\n          totalTime={this.state.totalTime}\r\n          totalCharLen={this.state.totalCharLen}\r\n          promptNum={this.state.promptNum}\r\n          totalPrompt={this.state.totalPrompt}\r\n        />\r\n        <PhraseBox\r\n          prompt={this.state.prompt}\r\n          promptNum={this.state.promptNum}\r\n          audioLen={this.state.audioLen}\r\n          totalCharLen={this.state.totalCharLen}\r\n          totalTime={this.state.totalTime}\r\n        />\r\n        <div className=\"wave-container\" id=\"container\">\r\n          {this.state.displayWav ? this.renderWave() : this.renderVisualizer()}\r\n          <Recorder\r\n            command={this.state.shouldRecord ? \"start\" : \"stop\"}\r\n            onStart={() => this.shoulddisplayWav(false)}\r\n            onStop={this.processBlob}\r\n            gotStream={this.silenceDetection}\r\n          />\r\n        </div>\r\n        <div className=\"indicator-container\">\r\n          {this.state.shouldRecord\r\n            ? \"Read Now [Esc] to cancel\"\r\n            : \"[Spacebar] to Start Recording [R] to review [->] for next\"}\r\n        </div>\r\n        <div id=\"controls\">\r\n          <button\r\n            id=\"btn_Play\"\r\n            className={`btn btn-play ${\r\n              this.state.shouldRecord\r\n                ? \"btn-disabled\"\r\n                : this.state.blob === undefined\r\n                  ? \"btn-disabled\"\r\n                  : this.state.play\r\n                    ? \"btn-disabled\"\r\n                    : null\r\n              } `}\r\n            onClick={this.state.shouldRecord ? () => null : this.state.play ? () => null : this.playWav}\r\n          >\r\n            <i className=\"fas fa-play ibutton\" />\r\n            Review\r\n          </button>\r\n          <button\r\n            id=\"btn_Next\"\r\n            className={`btn-next ${\r\n              this.state.shouldRecord\r\n                ? \"btn-disabled\"\r\n                : this.state.blob === undefined\r\n                  ? \"btn-disabled\"\r\n                  : this.state.play\r\n                    ? \"btn-disabled\"\r\n                    : null\r\n              }`}\r\n            onClick={this.state.shouldRecord ? () => null : this.state.play ? () => null : this.onNext}\r\n          >\r\n            <i className=\"fas fa-forward ibutton-next\" />\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  dismissPopup = () => {\r\n    this.setState({\r\n      showPopup: false\r\n    });\r\n  };\r\n\r\n  requestPrompts = uuid => {\r\n    getPrompt(uuid)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.success) {\r\n          this.setState({\r\n            prompt: res.data.prompt,\r\n            totalPrompt: res.data.total_prompt\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  requestUserDetails = uuid => {\r\n    getUser(uuid)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.success) {\r\n          this.setState({\r\n            userName: res.data.user_name,\r\n            language: res.data.language,\r\n            promptNum: res.data.prompt_num,\r\n            totalTime: res.data.total_time_spoken,\r\n            totalCharLen: res.data.len_char_spoken\r\n          });\r\n          this.requestPrompts(this.uuid);\r\n        } else {\r\n          if (this.uuid) {\r\n            createUser(this.uuid, this.name)\r\n              .then(res => res.json())\r\n              .then(res => {\r\n                if (res.success) {\r\n                  this.setState({ userCreated: true });\r\n                  this.requestPrompts(this.uuid);\r\n                } else {\r\n                  alert(\"sorry there is in error creating user\");\r\n                }\r\n              });\r\n          } else {\r\n            alert(\"sorry there is in error creating user\");\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  renderWave = () => (\r\n    <Wave\r\n      className=\"wavedisplay\"\r\n      waveColor=\"#FD9E66\"\r\n      blob={this.state.blob}\r\n      play={this.state.play}\r\n      onFinish={this.stopWav}\r\n    />\r\n  );\r\n\r\n  renderVisualizer = () => (\r\n    <Visualizer\r\n      className=\"wavedisplay\"\r\n      record={this.state.shouldRecord}\r\n      backgroundColor={\"#222222\"}\r\n      strokeColor={\"#FD9E66\"}\r\n    />\r\n  );\r\n\r\n  processBlob = blob => {\r\n    getAudioLen(this.uuid, blob)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.data === undefined) {\r\n          // alert(\"There was an error on server\");\r\n          return this.setState({\r\n            shouldRecord: false,\r\n            displayWav: false,\r\n            blob: undefined,\r\n            promptNum: 0,\r\n            totalTime: 0,\r\n            totalCharLen: 0,\r\n            audioLen: 0,\r\n            play: false\r\n          });\r\n        } else {\r\n          return this.setState({\r\n            audioLen: res.data.audio_len\r\n          });\r\n        }\r\n      });\r\n    this.setState({\r\n      blob: blob\r\n    });\r\n    this.shoulddisplayWav(true);\r\n  };\r\n\r\n  shoulddisplayWav = bool => this.setState({ displayWav: bool });\r\n\r\n  playWav = () => this.setState({ play: true });\r\n\r\n  stopWav = () => this.setState({ play: false });\r\n\r\n  handleKeyDown = event => {\r\n    // space bar code\r\n    if (event.keyCode === 32) {\r\n      if (!this.state.shouldRecord) {\r\n        event.preventDefault();\r\n        this.reset();\r\n        this.recordHandler();\r\n      }\r\n    }\r\n\r\n    // esc key code\r\n    if (event.keyCode === 27) {\r\n      event.preventDefault();\r\n      this.reset();\r\n    }\r\n\r\n    // play wav\r\n    if (event.keyCode === 82) {\r\n      this.playWav();\r\n    }\r\n\r\n    // next prompt\r\n    if (event.keyCode === 39) {\r\n      if (!this.state.play) {\r\n        this.onNext();\r\n      }\r\n    }\r\n  };\r\n\r\n  reset = () => {\r\n    // resets all states\r\n    this.setState({\r\n      shouldRecord: false,\r\n      displayWav: false,\r\n      blob: undefined,\r\n      audioLen: 0,\r\n      play: false\r\n    });\r\n  };\r\n\r\n  recordHandler = () => {\r\n    setTimeout(() => {\r\n      this.setState((state, props) => {\r\n        return {\r\n          shouldRecord: true,\r\n          play: false\r\n        };\r\n      });\r\n    }, 500);\r\n  };\r\n\r\n  onNext = () => {\r\n    if (this.state.blob !== undefined) {\r\n      postAudio(this.state.blob, this.state.prompt, this.uuid)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          if (res.success) {\r\n            this.setState({ displayWav: false });\r\n            this.requestPrompts(this.uuid);\r\n            this.requestUserDetails(this.uuid);\r\n            this.setState({\r\n              blob: undefined,\r\n              audioLen: 0\r\n            });\r\n          } else {\r\n            alert(\"There was an error in saving that audio\");\r\n          }\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n  };\r\n\r\n  silenceDetection = stream => {\r\n    const options = {\r\n      interval: \"150\",\r\n      threshold: -80\r\n    };\r\n    const speechEvents = hark(stream, options);\r\n\r\n    speechEvents.on(\"stopped_speaking\", () => {\r\n      this.setState({\r\n        shouldRecord: false\r\n      });\r\n    });\r\n  };\r\n}\r\n\r\nclass TopContainer extends Component {\r\n  render() {\r\n    return this.props.show ? this.renderContainer() : null;\r\n  }\r\n\r\n  renderContainer = () => {\r\n    return (\r\n      <div className=\"top-container\">\r\n        <div className=\"top-container-info\">\r\n          <div className=\"instructions2\">\r\n            <i className=\"fas fa-info-circle\" />\r\n            <h2>HINTS</h2>\r\n            <ul className=\"hints\">\r\n              <li>\r\n                <img src={spacebarSVG} className=\"key-icon\" alt=\"space\" /> will\r\n                start recording\r\n              </li>\r\n              <li>Recording will auto-stop after you speak</li>\r\n              <li>\r\n                <img src={PSVG} className=\"key-icon\" alt=\"p\" /> will play\r\n                recorded audio\r\n              </li>\r\n              <li>\r\n                <img src={rightSVG} className=\"key-icon\" alt=\"->\" /> will go to\r\n                next prompt\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"session-info\">\r\n            <div className=\"top-info\">\r\n              <div>\r\n                <h2>RECORDER</h2>\r\n                &nbsp;\r\n                <span id=\"sessionName\">{this.props.userName}</span>\r\n              </div>\r\n              <div className=\"btn-restart\" />\r\n            </div>\r\n            <hr />\r\n            <p>\r\n              It is very important that the recorded words{\" \"}\r\n              <span className=\"highlight\">\r\n                match the text in the script exactly\r\n              </span>\r\n              . If you accidentally deviate from the script or are unsure,\r\n              please record the prompt again.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <button className=\"btn info-btn\" onClick={this.handleClick}>\r\n          Tutorial\r\n        </button>\r\n        <button className=\"btn info-btn\" onClick={this.props.dismiss}>\r\n          Continue\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.route(\"/tutorial\");\r\n  };\r\n}\r\n\r\nexport default Record;\r\n","import React, { Component } from \"react\";\r\nimport PhraseBox from \"./components/PhraseBox\";\r\nimport { ReactMic as Visualizer } from \"react-mic\";\r\nimport spacebarSVG from \"./assets/space.svg\";\r\nimport PSVG from \"./assets/P.svg\";\r\nimport rightSVG from \"./assets/right.svg\";\r\n\r\nclass Tutorial extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Tutorial</h1>\r\n        <div className=\"tutorial\">\r\n            The Mimic Recording Studio was made to simplify the process of\r\n            creating your own text to speech corpus. This tutorial will help you\r\n            get started.\r\n            <br />\r\n            <br />\r\n            <div>\r\n            <h2>Recording Box</h2>\r\n            <PhraseBox\r\n                prompt=\"The human voice is the most perfect instrument of all.\"\r\n                promptNum={0}\r\n                audioLen={0}\r\n                totalCharLen={0}\r\n                totalTime={0}\r\n            />\r\n            <Visualizer\r\n                className=\"wavedisplay\"\r\n                record={false}\r\n                backgroundColor=\"#222222\"\r\n                strokeColor=\"#FD9E66\"\r\n            />\r\n            <p>\r\n                In the middle, you can see the phrase to record. To start the\r\n                recording press the &nbsp;\r\n                <img src={spacebarSVG} className=\"key-icon\" alt=\"space\" /> &nbsp;\r\n                bar. The recording should automatically stop when it detects\r\n                silence. To replay the recording press the &nbsp;\r\n                <img src={PSVG} className=\"key-icon\" alt=\"p\" /> &nbsp;\r\n                key. You may re-record\r\n                that same phrase as many times as you like. <b>It is essential that the\r\n                recorded words match the text in the script exactly. </b> If you\r\n                accidentally deviate from the script or are unsure, please record\r\n                the prompt again. Once saved you may not be able to go back. Press\r\n                the &nbsp;\r\n                <img src={rightSVG} className=\"key-icon\" alt=\"->\" />&nbsp;\r\n                key to keep the recording and move on to the next phrase.\r\n            </p>\r\n          </div>\r\n          <div>\r\n              <h2>Feedback</h2>\r\n              <p>\r\n              When recording stops, you may notice a feedback indicator appearing in the top right corner of the Recording Box. This indicator will tell you if you are speaking to fast, to slow, or at a good pace.\r\n              </p>\r\n              <div className=\"grid-layout\">\r\n                <div className=\"feedback-ball-green-t\">Good Pace</div>\r\n                <div className=\"feedback-ball-red-t\">Too Slow</div>\r\n                <div className=\"feedback-ball-red-t\">Too Fast</div>\r\n              </div>\r\n              <p><b>The indicator is determined using your average speech rate. The indicator will only start appearing after 100 recorded samples.\r\n              </b>\r\n            </p>\r\n          </div>\r\n          <div>\r\n              <button className=\"btn\" onClick={this.handleClick}>Record</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleClick = () => {\r\n      this.props.history.push(\"/record\")\r\n  }\r\n\r\n}\r\n\r\nexport default Tutorial;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport Intro from \"./Intro\";\r\nimport Record from \"./Record\";\r\nimport Tutorial from \"./Tutorial\";\r\nimport { getUUID, createUUID } from \"./api/localstorage\";\r\n\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component {\r\n  componentDidMount(){\r\n    if (!getUUID()){\r\n      createUUID()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router onUpdate={() => window.scrollTo(0, 0)}>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <div className=\"page\">\r\n            <Route exact path=\"/\" component={Intro} />\r\n            <Route path=\"/record\" component={Record} />\r\n            <Route path=\"/tutorial\" component={Tutorial} />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App'\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}